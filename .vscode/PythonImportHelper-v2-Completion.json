[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "sqlite3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlite3",
        "description": "sqlite3",
        "detail": "sqlite3",
        "documentation": {}
    },
    {
        "label": "check_password_hash",
        "importPath": "werkzeug.security",
        "description": "werkzeug.security",
        "isExtraImport": true,
        "detail": "werkzeug.security",
        "documentation": {}
    },
    {
        "label": "generate_password_hash",
        "importPath": "werkzeug.security",
        "description": "werkzeug.security",
        "isExtraImport": true,
        "detail": "werkzeug.security",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "server.app",
        "description": "server.app",
        "peekOfCode": "def index():\n    members = {'members': ['Member1', 'Member2', 'Member3']}\n    return members\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    if request.method == 'POST':\n        connection = sqlite3.connect(current_dir + '\\\\rain.db')\n        cur = connection.cursor()\n        request = request.get_json()\n        email = request['email']",
        "detail": "server.app",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "server.app",
        "description": "server.app",
        "peekOfCode": "def register():\n    if request.method == 'POST':\n        connection = sqlite3.connect(current_dir + '\\\\rain.db')\n        cur = connection.cursor()\n        request = request.get_json()\n        email = request['email']\n        print('email: ' + email)\n        # TODO get name from form.get\n        #name = \"bob\"\n        # TODO name checks",
        "detail": "server.app",
        "documentation": {}
    },
    {
        "label": "error_return",
        "kind": 2,
        "importPath": "server.app",
        "description": "server.app",
        "peekOfCode": "def error_return(error):\n    return ('An error has occured: ' + str(error))\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "server.app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "server.app",
        "description": "server.app",
        "peekOfCode": "app = Flask(__name__)\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))\n@app.route('/members')\ndef index():\n    members = {'members': ['Member1', 'Member2', 'Member3']}\n    return members\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    if request.method == 'POST':\n        connection = sqlite3.connect(current_dir + '\\\\rain.db')",
        "detail": "server.app",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "server.app",
        "description": "server.app",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\n@app.route('/members')\ndef index():\n    members = {'members': ['Member1', 'Member2', 'Member3']}\n    return members\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    if request.method == 'POST':\n        connection = sqlite3.connect(current_dir + '\\\\rain.db')\n        cur = connection.cursor()",
        "detail": "server.app",
        "documentation": {}
    },
    {
        "label": "my_profile",
        "kind": 2,
        "importPath": "server.base",
        "description": "server.base",
        "peekOfCode": "def my_profile():\n    response_body = {\n        \"name\": \"Nagato\",\n        \"about\" :\"Hello! I'm a full stack developer that loves python and javascript\"\n    }\n    return response_body",
        "detail": "server.base",
        "documentation": {}
    },
    {
        "label": "api",
        "kind": 5,
        "importPath": "server.base",
        "description": "server.base",
        "peekOfCode": "api = Flask(__name__)\n@api.route('/profile')\ndef my_profile():\n    response_body = {\n        \"name\": \"Nagato\",\n        \"about\" :\"Hello! I'm a full stack developer that loves python and javascript\"\n    }\n    return response_body",
        "detail": "server.base",
        "documentation": {}
    }
]